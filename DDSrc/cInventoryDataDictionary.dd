Use DataDict.pkg

Open Inventory 
Open InvoiceDetail
Open Customer
Open InvoiceDetailA

Register_Object Inventory_sl

Class cInventoryDataDictionary is a DataDictionary
    
    Procedure Construct_Object
        Forward Send Construct_Object
        
        Set Main_File to Inventory.File_Number

        Set Add_Client_File to Customer.File_Number
        Set Add_Client_File to InvoiceDetail.File_Number
        Set Cascade_Delete_State to False
        
        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
        
        Set Field_Label_Long Field Inventory.Item_ID to "Inventory Item ID"
        Set Field_Label_Short Field Inventory.Item_ID to "Item ID"
        Set Field_Option Field Inventory.Item_ID DD_AUTOFIND to True
        Set Field_Option Field Inventory.Item_ID DD_REQUIRED to True
        Set Field_Option Field Inventory.Item_ID DD_CAPSLOCK to True
        Set Field_Prompt_Object Field Inventory.Item_ID to Inventory_sl
        Set Key_Field_State Field Inventory.Item_ID to True
        Set Status_Help Field Inventory.Item_ID to "Inventory Item Id - user defined identification"
        
        Set Field_Label_Long Field Inventory.Description to "Inventory. Description"
        Set Field_Label_Short Field Inventory.Description to "Description"
        Set Field_Option Field Inventory.Description DD_REQUIRED to True
        Set Status_Help Field Inventory.Description to "Inventory Part Description"
        
        Set Field_Mask_Type Field Inventory.Unit_Price to MASK_CURRENCY_WINDOW
        Set Field_Mask Field Inventory.Unit_Price to (",*0.")
//        Set Field_Mask Field Inventory.Unit_Price to (",*0.00 " + Default_Currency_Symbol() + ";-"+",*0.00 " + Default_Currency_Symbol())
        Set Field_Value_Range Field Inventory.Unit_Price to 0 999999.99
        Set Status_Help Field Inventory.Unit_Price to "Retail unit price"
        
        Set Field_Value_Range Field Inventory.On_Hand to -999999.99 999999.99
        Set Status_Help Field Inventory.On_Hand to "Units currently available"
        
        Set piPrimaryIndex to 1
    End_Procedure
    
    Function Validate_Save Returns Integer
        Integer iRetVal
        
        Forward Get Validate_Save to iRetVal
        
        If iRetVal;
            Function_Return iRetVal
        
        If (Inventory.On_Hand < 0) Begin
            Send UserError "Insufficient Inventory Stock" ""
            Function_Return 1
        End
    End_Function
    
    Procedure Field_Defaults
        Forward Send Field_Defaults
        Set Field_Changed_Value Field Inventory.On_Hand to 99999
    End_Procedure
    
End_Class

#IFDEF Is$WebApp
#ELSE
    Use Inventory.sl
#ENDIF
