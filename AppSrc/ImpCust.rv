Use Windows.pkg
Use Dfrptvw.pkg
Use File_dlg.pkg
Use Batchdd.pkg

Use cCustomerDataDictionary.dd

Activate_View Activate_oCustomerImport for oCustomerImport
Object oCustomerImport is a ReportView
    Set Label to "Customer Import"
    Set Location to 10 16
    Set Size to 76 406
    Set Icon to "CustomerImport.ico"

    Object oOpenFile_dlg is a OpenDialog
        Set Dialog_Caption to "Select Customer File to Import"
        Set Filter_String  to "'Txt (*.txt)|*.txt|All (*.*)|*.*'"
        Set Initial_Folder to (PathAtIndex(phoWorkspace(ghoApplication), psDataPath(phoWorkspace(ghoApplication)), 1))
    End_Object

    Object CustomerImporter is a BusinessProcess
        Set Allow_Cancel_State to True
        Set Process_Title to "Importing Customer data"

        // Use these to keep track of import process
        Property Integer piErrCount 0
        Property Integer piAddedCount 0
        Property Boolean pbProcessCompletedState False
        
        Object oCustomer_DD is a cCustomerDataDictionary
            Send DefineAllExtendedFields
        End_Object

        Set Main_DD to oCustomer_DD
        
        // Called with text file open
        Procedure OnProcess
            Boolean bExit
            String sData
        
            While (not(SeqEof) and not(bExit))
                Send ImportOneCustomer
                Get Cancel_Check to bExit
            Loop
            If (bExit = False) Begin
               Set pbProcessCompletedState to True
            End
        End_Procedure
        
        Procedure ImportOneCustomer
            Integer hDD bErr
            String sData sID sCompany sPhoneDesc sPhone

            Move oCustomer_DD to hDD
            Send Clear of hDD
        
            Readln sID
            If ((SeqEof) or sID = "") Begin
                Procedure_Return
            End
        
            Readln sCompany
            Send Update_Status ("Adding " * sID - "," * sCompany-".")
            Send Log_Status    ("Adding " * sID - "," * sCompany-".")
        
            Set Field_Changed_Value of hDD Field Customer.Customer_Number to sID
            Set Field_Changed_Value of hDD Field Customer.Name to sCompany
        
            Readln sData
            Set Field_Changed_Value of hDD Field Customer.Address to sData
            Readln sData
            Set Field_Changed_Value of hDD Field Customer.City to sData
            Readln sData
            Set Field_Changed_Value of hDD Field Customer.State to sData
            Readln sData
            Set Field_Changed_Value of hDD Field Customer.Zip to sData
            Readln sData
            Set Field_Changed_Value of hDD Field Customer.Phone_Number to sData
            Readln sData
            Set Field_Changed_Value of hDD Field Customer.Fax_Number to sData
            Readln sData
            Set Field_Changed_Value of hDD Field Customer.EMail_Address to sData
            Readln sData
            Set Field_Changed_Value of hDD Field Customer.Credit_Limit to sData
            Readln sData
            Set Field_Changed_Value of hDD Field Customer.Purchases to sData
            Readln sData
            Set Field_Changed_Value of hDD Field Customer.Balance to sData
//            Readln sData
//            Set Field_Changed_Value of hDD Field Customer.Comments to sData
            Readln sData
            Set Field_Changed_Value of hDD Field Customer.Status to sData
        
            Get Request_Validate of hDD to bErr
            If (not (bErr)) Begin
                Send Request_Save of hDD
            End
        
            If (bErr) Begin
                Set piErrCount to (piErrCount(Self) + 1)
            End
            Else Begin
                Set piAddedCount to (piAddedCount(Self) + 1)
            End
        End_Procedure
        
        Procedure OnError
            // we will cause errors to ask if we should stop the import.
            Set Error_Check_State to False
        End_Procedure
        
        Procedure DoImport String sFile
            String  sData
            Integer bDone
            String  sErrs sAdded
        
            Set piErrCount to 0
            Set piAddedCount to 0
        
            Direct_Input sFile
                If (SeqEof) Begin
                   Send Stop_Box ("The file named '" - sFile - "' was not found.") "Invalid File name"
                   Procedure_Return
                End
        
                Readln sData // first line should be "CUSTOMER-IMPORT"
                If (sData <> "CUSTOMER-IMPORT") Begin
                    Send Stop_Box "The file does not appear to be a valid Customer import file" "Invalid File"
                    Close_Input
                    Procedure_Return
                End
        
                Set pbProcessCompletedState to False
                Send DoProcess
            Close_Input
        
            Get piErrCount to sErrs
            Get piAddedCount to sAdded
            Get pbProcessCompletedState to bDone
            Send Info_Box ("Import File Name:" * sFile + ;
                           "\n\n" + If(bDone,"Process Completed","Process was canceled") +;
                           "\n\nCompanies Added:" * sAdded + ;
                           "\nErrors encountered:" * sErrs)
        End_Procedure
        
    End_Object

    // Access method is: Send DoImport to CustomerImporter <sFileName>
    Procedure ImportData
        String sFile
        Get Value of oFileName_fm to sFile
        Send DoImport of CustomerImporter sFile
    End_Procedure

    Object oFileName_fm is a Form
        Set Label to "File Name"
        Set Size to 13 226
        Set Location to 33 45
        Set Label_Col_Offset to 2
        Set Label_Justification_Mode to jMode_Right
        Set Prompt_Button_Mode to pb_PromptOn

        Procedure Prompt
            Handle  bOpen hoDialog
            String sFileTitle sFileName
        
            Move (oOpenFile_dlg(Self)) to hoDialog
            Get Show_Dialog of hoDialog to bOpen
        
            If (bOpen) Begin
                 Get File_Name of hoDialog to sFileName
                 Set Value to sFileName
            End
        End_Procedure

    End_Object

    Object oImport_btn is a Button
        Set Label to "Import"
        Set Size to 14 51
        Set Location to 33 278
        Set Default_State to True

        Procedure OnClick 
            String sFileName
            Boolean bExists
            Get Value of oFileName_fm to sFileName
            File_Exist sFileName bExists
            If (bExists = False) Begin
                Send Info_Box "The file name doesn't exist."
                Procedure_Return
            End
            Send ImportData
        End_Procedure

    End_Object

    Object CancelBn is a Button
        Set Label to "Close"
        Set Location to 33 335

        Procedure OnClick
           send Request_Cancel
        End_Procedure

    End_Object

End_Object
